Структура презентации:
1. Титульник
2. О задаче (математическая постановка задачи и т.п.)
3. Метод ветвей и границ
3.1. Вводим понятия честный и жадный поиск
3.2. Принцип работы
4. Метод динамического программирования
4.1 Принцип работы
5. Примеры работы
6.1. Сравнение времени работы на C++
6.2. Сравнение времени работы на Wolfram Mathematica
(7). Слайд "Спасибо за внимание"



-------------------------------------------------------------------------
Метод ветвей и границ:

0. Сортируем по удельно стоимости для более точной оценки сверху
   и вызываем find_best

find_best(список предметов, макс. вес):
1. Если список состоит из одного предмета,
   то возвращаем одно решение, состоящее из макс. кол-ва этого предмета,
   которое влезает в рюкзак вместимости "макс. вес"

2. Для одного из возможных кол-в честно находим решения (*рекурсия*)

3. Для остальных сначала находим оценку сверху (*цикл*)
3.1. Если оценка сверху меньше суммарной стоимости известного решения,
	 то	это кол-во не попадает в решение, переходим к следующему кол-ву
3.2. Иначе честно находим решения для данного кол-ва (*рекурсия*)
3.3. Если суммарная стоимость новых решений
         (она равна для каждого решения для данного кол-ва):
     1) меньше суммарной стоимости известного решения/ий,
	 то старое решенение/старые решения лучше нового/ых; ничего не делаем
	 2) совпадает,
	 то объединяем новые и старые решения
	 3) больше,
	 то старые решения меняем на новые
	 
4. возвращаем итоговые решения

Примечания:
1. Если решений нет, то суммарная стоимость решений равна нулю
2. В качестве оценочной мы выбрали, так называемую, линейную релаксацию исходной задачи,
которая получается заменой дискретных ограничений линейными:
**Скопировать из pdf'ки математическую постановку**
Она решается методом Данцига, который выполняется за линейное время
**алгоритм метода Данцика**

*** Сюда же можно вставить схемку, нарисованную в paint'е,
*** в качестве абстрактного примера

*** Для жадного решения, мне кажется, лучше подобрать другое название.
*** Например:
*** 1) приближенное
*** 2) оценочное
*** 3) оценка сверху (?)
*** 4) ...


-------------------------------------------------------------------------
Метод динамического программирования:

